Mix.install([
  {:kino, "~> 0.6.1"},
  {:httpoison, "~> 1.8"},
  {:jason, "~> 1.2"}
])

# Import necessary libraries
import Kino

# Define a form with Kino.Input for the English phrase
form = Kino.Input.text("Enter a phrase in English:")

# Create a button to trigger the translation
button = Kino.Input.button("Translate")

# Display the form and button
Kino.Layout.grid([form, button])

# Define a function to fetch translation from Google Translate API
def fetch_google_translation(phrase) do
  url = "https://translation.googleapis.com/language/translate/v2"
  key = "YOUR_GOOGLE_API_KEY"
  params = [
    q: phrase,
    target: "pl",
    source: "en",
    key: key
  ]

  case HTTPoison.get(url, [], params: params) do
    {:ok, %HTTPoison.Response{status_code: 200, body: body}} ->
      body
      |> Jason.decode!()
      |> get_in(["data", "translations", 0, "translatedText"])

    {:error, %HTTPoison.Error{reason: reason}} ->
      "Error: #{reason}"
  end
end

# Define a function to fetch translation from DeepL API
def fetch_deepl_translation(phrase) do
  url = "https://api-free.deepl.com/v2/translate"
  key = "YOUR_DEEPL_API_KEY"
  params = [
    text: phrase,
    target_lang: "PL",
    source_lang: "EN",
    auth_key: key
  ]

  case HTTPoison.post(url, {:form, params}) do
    {:ok, %HTTPoison.Response{status_code: 200, body: body}} ->
      body
      |> Jason.decode!()
      |> get_in(["translations", 0, "text"])

    {:error, %HTTPoison.Error{reason: reason}} ->
      "Error: #{reason}"
  end
end

# Handle button click
Kino.listen(button, fn _ ->
  phrase = Kino.Input.value(form)

  google_translation = fetch_google_translation(phrase)
  deepl_translation = fetch_deepl_translation(phrase)

  Kino.Markdown.new("""
  ## Translations

  **Google Translate:**
  #{google_translation}

  **DeepL Translate:**
  #{deepl_translation}
  """)
end)